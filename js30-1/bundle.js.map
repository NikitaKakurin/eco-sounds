{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA+D;AACE;AACF;AACM;AACJ;AACJ;AAC7D;AAC+D;AACE;AACF;AACM;AACJ;AACJ;AAC7D;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+DAAU;AAC7B,qBAAqB,iEAAY;AACjC,uBAAuB,mEAAc;AACrC,oBAAoB,gEAAW;AAC/B,oBAAoB,gEAAW;AAC/B,qBAAqB,iEAAY;AACjC;AACA;AACA;AACA,mBAAmB,8DAAY;AAC/B,qBAAqB,gEAAc;AACnC,uBAAuB,iEAAgB;AACvC,oBAAoB,8DAAa;AACjC,qBAAqB,+DAAc;AACnC,oBAAoB,8DAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,aAAa;AACrvmCAAmC,qBAAqB,IAAI,uBAAuB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,wBAAwB;AAC5E;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC5YA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;;;;;;;;;;ACf+B;AACF;AACA;AAC7B,QAAQ,WAAW,EAAE,mBAAO,CAAC,yCAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C","sources":["webpack:///./style/media.scss","webpack:///./style/style.scss","webpack:///./style/normalize.css","webpack:///./nativeSounds.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/publicPath","webpack:///./index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","import forestSound from './assets/eco-sounds/audio/forest.mp3';\r\nimport soloveySound from './assets/eco-sounds/audio/solovey.mp3';\r\nimport slavkaSound from './assets/eco-sounds/audio/slavka.mp3';\r\nimport javoronokSound from './assets/eco-sounds/audio/javoronok.mp3';\r\nimport zarynkaSound from './assets/eco-sounds/audio/zarynka.mp3';\r\nimport drozdSound from './assets/eco-sounds/audio/drozd.mp3';\r\n\r\nimport forestPicture from './assets/eco-sounds/img/forest.jpg';\r\nimport soloveyPicture from './assets/eco-sounds/img/solovey.jpg';\r\nimport slavkaPicture from './assets/eco-sounds/img/slavka.jpg';\r\nimport javoronokPicture from './assets/eco-sounds/img/javoronok.jpg';\r\nimport zarynkaPicture from './assets/eco-sounds/img/zarynka.jpg';\r\nimport drozdPicture from './assets/eco-sounds/img/drozd.jpg';\r\n\r\nexport class EcoSound{\r\n    constructor(selector){\r\n        this.ecoSound = document.querySelector(selector);\r\n        if(!this.ecoSound){\r\n            throw new Error('Eco-sounds not found')\r\n        }\r\n        this.audio = this.ecoSound.querySelector('.eco-main__audio');\r\n        this.mainIcon = this.ecoSound.querySelector('.eco-main__main-icon');\r\n        this.logo = this.ecoSound.querySelector('.eco-logo');\r\n        this.menuButtons = this.ecoSound.querySelectorAll('[data-sound]');\r\n        this.controlsButtons = this.ecoSound.querySelectorAll('[data-sound]');\r\n        this.ecoMain = this.ecoSound.querySelector('.eco-main');\r\n        this.volumeButton = this.ecoSound.querySelector('.eco__controls-volume')\r\n        this.currentVolumePointer = this.ecoSound.querySelector('.eco__controls-volume-range-current');\r\n        this.volumeRangeUp = this.ecoSound.querySelector('.eco__controls-volume-range-up');\r\n        this.volumeRangeDown = this.ecoSound.querySelector('.eco__controls-volume-range-down');\r\n        this.mainText = this.ecoSound.querySelector('.eco-main__text');\r\n        this.btnPlay = this.ecoSound.querySelector('.eco__controls-btn-play');\r\n        this.btnPause = this.ecoSound.querySelector('.eco__controls-btn-pause');\r\n        this.allVolumeHeight = this.volumeRangeDown.clientHeight + \r\n                                this.volumeRangeUp.clientHeight + \r\n                                this.currentVolumePointer.clientHeight;\r\n        this.sounds = {\r\n            drozd: drozdSound,\r\n            zarynka: zarynkaSound,\r\n            javoronok: javoronokSound,\r\n            slavka: slavkaSound,\r\n            forest: forestSound,\r\n            solovey: soloveySound,\r\n        }\r\n\r\n        this.pictures = {\r\n            drozd: drozdPicture,\r\n            zarynka: zarynkaPicture,\r\n            javoronok: javoronokPicture,\r\n            slavka: slavkaPicture,\r\n            solovey: soloveyPicture,\r\n            forest: forestPicture,\r\n        }\r\n\r\n        this.sound = new Audio(this.sounds.forest);\r\n        this.currentBackground = 'forest';\r\n        this.currentTime = 0;\r\n        this.currentSound = 'forest';\r\n        this.volume=this.sound.volume;\r\n        this.isSoundOn = true;\r\n        this.isSoundPicture = true;\r\n        this.hideTextTimeout=null;\r\n        this.hideMainIconTimeout=null;\r\n        this.changePictureInterval=null;\r\n        this.CurrentMainText = \"Лес\";\r\n        this.initEventListeners();\r\n        this.setVolume((this.volumeRangeDown.clientHeight+(this.currentVolumePointer.clientHeight/2))/this.allVolumeHeight);\r\n        this.preloadImages();\r\n        this.listenerMouseMove=this.handleMouseMoveOnVolume.bind(this);\r\n        this.listenerMouseUp=this.handleMouseUpOnVolume.bind(this);\r\n    }\r\n\r\n    preloadImages(){\r\n        for(let key in this.pictures){\r\n            const img = new Image();\r\n            img.src = this.pictures[key];\r\n        }\r\n    }\r\n    \r\n    initEventListeners(){\r\n        this.ecoSound.addEventListener('click', this.handleClick.bind(this));\r\n        this.sound.addEventListener(\"volumechange\", this.handleVolumeChange.bind(this),{passive:true});\r\n        this.sound.addEventListener(\"play\", this.handlePlaySound.bind(this));\r\n        this.sound.addEventListener(\"pause\", this.handlePauseSound.bind(this));\r\n        this.sound.addEventListener('ended',this.handleEndSound.bind(this));\r\n        this.ecoSound.addEventListener('mousedown', this.handleMouseDown.bind(this));\r\n        this.ecoSound.addEventListener('wheel', this.handleWheel.bind(this));\r\n        this.ecoSound.addEventListener('mousemove', this.handleMouseMoveOnEcoSound.bind(this))\r\n        document.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\r\n    }\r\n    \r\n    handleEndSound(event){\r\n        this.changeOnNextSound(1);\r\n    }\r\n\r\n    handleKeyDown(event){\r\n        if(event.code === 'Space'){\r\n            event.preventDefault();\r\n            this.togglePlaySound();\r\n            return;          \r\n        };\r\n        if(event.code === 'ArrowRight'){\r\n            this.changeOnNextSound(1);\r\n            return;\r\n        }\r\n        if(event.code === 'ArrowLeft'){\r\n            this.changeOnNextSound(-1);\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleMouseMoveOnEcoSound(event){\r\n        if(this.hideMainIconTimeout){\r\n            clearTimeout(this.hideMainIconTimeout)\r\n        }\r\n\r\n        if(this.changePictureInterval){\r\n            clearInterval(this.changePictureInterval)\r\n        }\r\n\r\n        if(this.mainIcon.classList.contains('eco-main__main-icon-hide')){\r\n            this.mainIcon.classList.remove('eco-main__main-icon-hide')\r\n        }\r\n\r\n        this.hideMainIconTimeout = setTimeout(()=>{\r\n            this.mainIcon.classList.add('eco-main__main-icon-hide')\r\n        },1000)\r\n        \r\n        this.changePictureInterval = setInterval(()=>{\r\n            let fileNames =Object.keys(this.pictures);\r\n            \r\n            const randomPictures = () => {\r\n                let key = fileNames[Math.floor(Math.random()*fileNames.length)]\r\n                while (key===this.currentBackground) {\r\n                    key = fileNames[Math.floor(Math.random()*fileNames.length)] \r\n                }\r\n                return key;\r\n            }\r\n\r\n            this.changeBackgroundMain(randomPictures())\r\n        },5000)\r\n    }\r\n\r\n    handleWheel(event){\r\n        this.setVolume(this.sound.volume - event.deltaY/2000)\r\n    }\r\n\r\n    handleClick(event){\r\n        let target = event.target;\r\n\r\n        if(target.dataset.sound){\r\n            this.changeSound(target);\r\n            return;\r\n        }\r\n\r\n        if(target.classList.contains(\"eco-main__main-icon\")){\r\n            this.togglePlaySound();\r\n            return;\r\n        }\r\n\r\n        if(target.classList.contains(\"eco__controls-btn-play\")){\r\n            if(this.sound.paused){\r\n                this.playSound();\r\n                return\r\n            }\r\n        }\r\n    \r\n        if(target.classList.contains(\"eco__controls-btn-pause\")){\r\n            if(!this.sound.paused){\r\n                this.pauseSound();\r\n                return\r\n            }\r\n        }\r\n\r\n        if(target.classList.contains(\"eco__controls-volume\")){\r\n            this.toggleSoundVolume(target);\r\n            return;\r\n        }\r\n\r\n        if(target.classList.contains(\"eco__controls-btn-download\")){\r\n            this.downloadFile(target)\r\n        }\r\n    }\r\n\r\n    handleMouseDown(event){\r\n        const target = event.target;\r\n        if(target.classList.contains(\"eco__controls-volume-range\")){\r\n            this.topOfVolume = this.volumeRangeUp.getBoundingClientRect().top\r\n            let level = +(1 - (event.clientY-this.topOfVolume)/this.allVolumeHeight);\r\n            this.setVolume(level)\r\n            this.ecoSound.addEventListener(\"mousemove\",this.listenerMouseMove)\r\n            this.ecoSound.addEventListener(\"mouseup\",this.listenerMouseUp)\r\n        }   \r\n    }\r\n\r\n    handleMouseUpOnVolume(event){\r\n        this.ecoSound.removeEventListener(\"mousemove\",this.listenerMouseMove);\r\n        this.ecoSound.removeEventListener(\"mouseup\",this.listenerMouseUp);\r\n    }\r\n\r\n    handleMouseMoveOnVolume(event){\r\n        if(event.target.classList.contains(\"eco__controls-volume-range\")||\r\n            event.target.closest(\".eco__controls-volume-range-container\")){\r\n            let level = +(1 - (event.clientY-this.topOfVolume)/this.allVolumeHeight);\r\n            this.setVolume(level)\r\n        }\r\n    }\r\n\r\n    handleVolumeChange(event){\r\n        if(this.sound.volume===0){\r\n            this.setMuteIcon()\r\n            this.isSoundPicture = false;\r\n        }else if(this.isSoundPicture === false){\r\n            this.setVolumeIcon();\r\n            this.isSoundPicture = true;\r\n        }\r\n        this.moveCurrentVolumePointer(+this.sound.volume.toFixed(2))\r\n        this.showMainText();\r\n    }\r\n\r\n    handlePlaySound(){\r\n        this.activatePlayBtn()\r\n        this.mainIcon.classList.add(\"eco-main__main-icon-pause\");\r\n        this.showMainText(this.CurrentMainText);\r\n    }\r\n\r\n    handlePauseSound(){\r\n        this.activatePauseBtn()\r\n        this.mainIcon.classList.remove(\"eco-main__main-icon-pause\");\r\n    }\r\n\r\n    changeOnNextSound(step){\r\n        let nextSound = this.findNextSound(step);\r\n        let target = document.querySelector(`[data-sound = ${nextSound}]`)\r\n        this.changeSound(target);\r\n    }\r\n\r\n    findNextSound(step){\r\n        const ArrayOfFileNames = Object.keys(this.sounds);\r\n        let numberOfNextSound = ArrayOfFileNames.indexOf(this.currentSound)+step;\r\n        if(numberOfNextSound>ArrayOfFileNames.length-1){\r\n            numberOfNextSound=0;\r\n        }else if(numberOfNextSound<0){\r\n            numberOfNextSound = ArrayOfFileNames.length-1;\r\n        }\r\n        return ArrayOfFileNames[numberOfNextSound];\r\n    }\r\n\r\n    changeSound(target){\r\n        this.setCurrentMainText(target.innerText)\r\n        this.SetSrcAudio(target.dataset.sound);\r\n        this.changeActiveButton(target);\r\n        this.changeBackgroundMain(target.dataset.sound);\r\n    }\r\n\r\n    activatePlayBtn(){\r\n            this.btnPause.classList.remove('eco__controls-btn-active');\r\n            this.btnPlay.classList.add('eco__controls-btn-active');\r\n    }\r\n\r\n    activatePauseBtn(){\r\n            this.btnPlay.classList.remove('eco__controls-btn-active');\r\n            this.btnPause.classList.add('eco__controls-btn-active');\r\n    }\r\n\r\n    downloadFile(target){\r\n        let link = document.createElement('a');\r\n        link.setAttribute('href', this.sounds[this.currentSound]);\r\n        link.setAttribute('download', this.sounds[this.currentSound]);\r\n        link.click();\r\n        return false;\r\n    }\r\n\r\n    setCurrentMainText(text){\r\n        if(!text){\r\n            this.CurrentMainText = \"Лес\";\r\n            return;\r\n        }\r\n        this.CurrentMainText = text;\r\n    }\r\n\r\n    showMainText(text){\r\n        let showingText;\r\n        if(this.hideTextTimeout){\r\n            clearTimeout(this.hideTextTimeout);         \r\n        }\r\n        if(this.firstShovingText){\r\n            showingText = this.firstShovingText;\r\n            this.firstShovingText=null;\r\n        }else{\r\n            showingText = text || Math.round(this.sound.volume*100)+\"%\";\r\n        }\r\n\r\n        this.mainText.style.opacity = 1;\r\n        this.mainText.innerText = showingText;\r\n        this.hideTextTimeout = setTimeout(()=>this.mainText.style.opacity = 0,1000)\r\n    }\r\n\r\n    moveCurrentVolumePointer(level){\r\n        let fixHeight = (height)=>(height<0)? '0px': (height +'px');\r\n        let halfHeightPointer = this.currentVolumePointer.clientHeight/2;\r\n        this.volumeRangeDown.style.height = fixHeight(this.allVolumeHeight*level-halfHeightPointer);\r\n        this.volumeRangeUp.style.height = fixHeight(this.allVolumeHeight*(1-level)-halfHeightPointer);\r\n    }\r\n\r\n    setVolume(VolumeLevel){\r\n        let level=VolumeLevel\r\n        if(level < 0){\r\n            level = 0;\r\n        }else if(level > 1){\r\n            level = 1;\r\n        }\r\n        this.sound.volume = +level.toFixed(2);\r\n    }\r\n\r\n    toggleSoundVolume(target){\r\n        if(this.isSoundOn){\r\n            this.volume = this.sound.volume\r\n            this.setVolume(0);\r\n            this.isSoundOn = false;\r\n            return;\r\n        }\r\n        this.setVolume(this.volume);\r\n        this.isSoundOn = true;\r\n    }\r\n\r\n    setMuteIcon(){\r\n        this.volumeButton.classList.add(\"eco__controls-volume-off\") \r\n    }\r\n\r\n    setVolumeIcon(){\r\n        this.volumeButton.classList.remove(\"eco__controls-volume-off\") \r\n    }\r\n\r\n    togglePlaySound(){\r\n        if(this.sound.paused){\r\n            this.playSound()\r\n            return;\r\n        }\r\n        this.pauseSound()\r\n    }\r\n\r\n    playSound(){\r\n        this.sound.currentTime = this.currentTime;\r\n        this.sound.play();\r\n    }\r\n\r\n    pauseSound(){\r\n        this.currentTime = this.sound.currentTime;\r\n        this.sound.pause();\r\n    }\r\n    \r\n    SetSrcAudio(fileName){\r\n        let volume = this.sound.volume;\r\n        this.sound.pause();\r\n        this.sound.src=this.sounds[fileName]\r\n        this.currentSound = fileName;\r\n        this.setVolume(volume);\r\n        this.sound.play();\r\n        this.firstShovingText = `${this.CurrentMainText}\\n${Math.floor(volume*100)}%`;\r\n    }\r\n\r\n\r\n\r\n    changeActiveButton(target){\r\n        if(target.classList.contains('eco-menu__btn-active')||\r\n            target.classList.contains('eco-logo-active')){\r\n                return;\r\n        }\r\n\r\n        this.removeActiveClassMenuButtons()\r\n\r\n        if(target.classList.contains('eco-logo')){\r\n            target.classList.add('eco-logo-active');\r\n            return\r\n        }\r\n        target.classList.add('eco-menu__btn-active');\r\n    }\r\n\r\n    removeActiveClassMenuButtons(){\r\n        this.menuButtons.forEach(btn => {\r\n            if(btn.classList.contains('eco-logo-active')){\r\n                btn.classList.remove('eco-logo-active');\r\n                return;\r\n            }\r\n            btn.classList.remove('eco-menu__btn-active')\r\n        });\r\n    }\r\n   \r\n    changeBackgroundMain(fileName){\r\n        if(this.currentBackground===fileName){\r\n            return;\r\n        }\r\n        this.currentBackground=fileName;\r\n        this.ecoMain.style.backgroundImage = `url(${this.pictures[fileName]})`;\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import './style/normalize.css';\r\nimport  './style/style.scss';\r\nimport  './style/media.scss';\r\nconst { EcoSound } = require('./nativeSounds');\r\nconst eco = new EcoSound('.eco-container');\r\n\r\nconsole.log(`Привет! Работу оцениваю в 60 баллов.\r\nПри отсутствии движения мышки через одну секунду \r\nисчезает кнопка посреди экрана, через 3 секунды \r\nначинают рандомно меняться картинки автоматически.\r\n\r\nНажатие пробела работает как пуск/пауза,\r\nстрелками клавиатуры(влево,вправо) можно переключать \r\nна следующую/предыдущую мелодию.\r\n\r\nКолесиком мышки можно регулировать громкость,также \r\nгромкость можно регулировать ползунком громкости \r\nи отключать звук кликнув по заначку громкости.\r\n\r\nПосле завершения мелодии автоматически начинается\r\nследующая.\r\n\r\nТак же возможно скачивание выбранной мелодии`);"],"names":[],"sourceRoot":""}